{
  "hash": "97b1764d96e6ab2ba4ed5c8e9a21eb54",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"We live in magical times\"\ndate: 2025-10-27\ndescription: \"What one can do with a static website these days is pretty amazing!\"\nimage: \"\"\ntwitter-card:\n  image: \"\"\nopen-graph:\n  image: \"\"\ncategories:\n  - webR\n  - R\n  - teaching\n# resources:\n#   - \"img/*\"\ndoi: \"\"\ncitation: true\n# resources:\n#   - data\nwebr:\n  packages:\n    - dplyr\n# formats: [live-html]\n# format:\n#   html: {}\n# format:\n  # live-html:\n    # output-file: index-live.html\nengine: knitr\n# engine: jupyter\nfreeze: auto\n---\n\n\n::: {.cell}\n\n:::\n\n\n\nA lot of things are less than ideal in the world at the moment, but I can't help but be amazed at what one can do with a static website. \nWebR through quarto-live allows you to run R (you can also run Python with pyodide) in the browser. \nNo server required.\nLike below:\n\n\n::: {.cell}\n```{webr}\n2+2\n\n```\n:::\n\n\n\nI can't help but feel this is a little like magic.\n\n::: {.callout-note}\nFull disclosure, while this works out of the box on a local machine, I had to tweak a few things for it to render with `quarto render` as I had all sort of yaml issues. \nI think there was 16 commits between me starting the blog post with the demo code chunk and it working as intended with quarto render.\n:::\n\nOf course, you can do more useful things that this. \nFor example create a visualisation that the reader can interact with to better understand the data.\n\nFirst, we can get a peak at the data:\n\n\n::: {.cell}\n```{webr}\nlibrary(ggplot2)\ndata(\"txhousing\")\nsummary(txhousing)\nhead(txhousing)\n\n```\n:::\n\n\nThe data contains 1 row per city per time period.\nArmed with this knowledge, we can make a simple plot.\nIt is obvious that we will need to use some sort of summary of the data to draw our plot\n\n::: {.callout-warning}\nThe below code chunk only works if you have run the previous one. Specifically, if you have run `data(\"txhousing\")`. \nIf you want to run the below code chunk independently, you will need to add that line to it.\n:::\n\n\n\n::: {.cell}\n```{webr}\ntxhousing_summary <- txhousing |> \n  group_by(date) |> \n  summarise(sales = sum(sales, na.rm = TRUE))\n\nggplot(txhousing_summary, aes(x = date, y = sales)) +\n  geom_line() +\n  theme_minimal() +\n  labs(title = \"Texas Housing Sales Over Time\",\n       x = \"Date\",\n       y = \"Number of Sales\")\n```\n:::\n\n\nThis is hardly a masterpiece, and in many cases, you only want the reader to see the final plot, but for teaching, this can be used to engage the reader so they can build the plot themselves step by steps.\n\nAnyway, I am pretty amazed this works, and excited to see how to use it in teaching\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}